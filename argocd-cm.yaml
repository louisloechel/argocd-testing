apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-cm","namespace":"argocd"}}
  creationTimestamp: "2023-08-15T11:43:31Z"
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-cm
  namespace: argocd
  resourceVersion: "618"
  uid: 3132e710-e38d-46ce-8077-141fff8b7575
data:
  resource.customizations: |
    constraints.gatekeeper.sh/K8sRequiredLabels:
      health.lua: |
        hs = {}
        if obj.status == nil then
          hs.status = "Progressing"
          hs.message = "Waiting for constraint to be processed"
          return hs
        end
        if obj.status.totalViolations > 0 then
          hs.status = "Degraded"
          hs.message = string.format("%d violations detected", obj.status.totalViolations)
          return hs
        end
        hs.status = "Healthy"
        hs.message = "No violations detected"
        return hs
    templates.gatekeeper.sh/ConstraintTemplate:
      health.lua: |
        hs = {}
        if obj.status == nil then
          hs.status = "Progressing"
          hs.message = "Waiting for template to be processed"
          return hs
        end
        if obj.status.byPod == nil then
          hs.status = "Progressing"
          hs.message = "Waiting for template to be processed"
          return hs
        end
        for _, podStatus in pairs(obj.status.byPod) do
          if podStatus.errors > 0 then
            hs.status = "Degraded"
            hs.message = string.format("Error processing template on pod %s", podStatus.id)
            return hs
          end
        end
        hs.status = "Healthy"
        hs.message = "Template processed successfully"
        return hs
